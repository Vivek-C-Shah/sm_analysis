import requests
import json

# Define the Langflow API endpoint and token
URL = "https://api.langflow.astra.datastax.com/lf/0d55ad7b-7f9b-40c6-b96e-178409018ffa/api/v1/run/373ef7aa-0ab4-4a5a-a75f-bb4edf496f33?stream=false"
HEADERS = {
    "Content-Type": "application/json",
    "Authorization": "Bearer AstraCS:UgeLajXUdHFnjycldszinXSn:e03bed97715b20e1e266ea17ed4ba7c59736892bed8e2423a99a16d9d98c55a1"
}

def get_post_type_analysis(post_type):
    # Define the payload
    payload = {
        "input_value": post_type,
        "output_type": "chat",
        "input_type": "chat",
        "tweaks": {
            "ChatInput-I77JO": {
                "sender": "User",
                "sender_name": "User",
                "session_id": "",
                "should_store_message": True
            },
            "Prompt-8eRmY": {
                "template": (
                    "You are an expert in social media analytics. Your role is to analyze performance data for various post types and "
                    "provide actionable insights to improve engagement and performance. Below is the data for different post types:\n\n"
                    "Metrics:\n1. Carousel:\n   - Average Likes: 2521.54\n   - Average Shares: 497.70\n   - Average Comments: 1006.64\n"
                    "   - Engagement Rate: 4025.88\n   - Like-to-Comment Ratio: 2.50\n   - Share-to-Like Ratio: 0.20\n\n2. Live Stream:\n"
                    "   - Average Likes: 2326.84\n   - Average Shares: 506.98\n   - Average Comments: 919.35\n   - Engagement Rate: 3753.17\n"
                    "   - Like-to-Comment Ratio: 2.53\n   - Share-to-Like Ratio: 0.22\n\n3. Poll:\n   - Average Likes: 2671.08\n   - Average "
                    "Shares: 487.13\n   - Average Comments: 1008.66\n   - Engagement Rate: 4166.86\n   - Like-to-Comment Ratio: 2.65\n   "
                    "- Share-to-Like Ratio: 0.18\n\n4. Reels:\n   - Average Likes: 2671.82\n   - Average Shares: 501.01\n   - Average Comments: "
                    "1037.46\n   - Engagement Rate: 4210.29\n   - Like-to-Comment Ratio: 2.58\n   - Share-to-Like Ratio: 0.19\n\n5. Static Images:\n"
                    "   - Average Likes: 2349.77\n   - Average Shares: 490.60\n   - Average Comments: 1059.26\n   - Engagement Rate: 3899.62\n   "
                    "- Like-to-Comment Ratio: 2.22\n   - Share-to-Like Ratio: 0.21\n\n6. Stories:\n   - Average Likes: 2877.52\n   - Average Shares: "
                    "493.26\n   - Average Comments: 955.45\n   - Engagement Rate: 4326.24\n   - Like-to-Comment Ratio: 3.01\n   - Share-to-Like "
                    "Ratio: 0.17\n\nWhen a user provides a post type (e.g., 'carousel', 'reels', 'static images'), do the following:\n1. Analyze the "
                    "performance of the specified post type based on the above metrics.\n2. Compare its performance to other post types to identify "
                    "strengths and weaknesses.\n3. Provide actionable recommendations to improve engagement for that post type.\n4. Highlight patterns, "
                    "opportunities, or potential issues.\n"
                )
            },
            "OpenAIModel-MIPkw": {
                "api_key": "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",
                "input_value": "",
                "json_mode": False,
                "max_tokens": None,
                "model_kwargs": {},
                "model_name": "gpt-4o-mini",
                "openai_api_base": "",
                "output_schema": {},
                "seed": 1,
                "stream": False,
                "system_message": "",
                "temperature": 0.1
            },
            "ChatOutput-Cd9Oa": {
                "data_template": "{text}",
                "sender": "Machine",
                "sender_name": "AI",
                "session_id": "",
                "should_store_message": True
            }
        }
    }

    # Send the API request
    response = requests.post(URL, headers=HEADERS, json=payload)

    # Parse the response
    if response.status_code == 200:
        try:
            result = response.json()
            # Extract the text output
            outputs = result.get("outputs", [])
            if outputs:
                text = outputs[0].get("outputs", [{}])[0].get("results", {}).get("message", {}).get("text", "")
                return text
            else:
                return "No insights were generated by the Langflow API."
        except Exception as e:
            return f"Error parsing response: {str(e)}"
    else:
        return f"Error: {response.status_code} - {response.text}"

# Example usage
if __name__ == "__main__":
    post_type = input("Enter the post type to analyze (e.g., carousel, reels, poll): ").strip()
    analysis = get_post_type_analysis(post_type)
    print("Langflow Analysis:")
    print(analysis)
